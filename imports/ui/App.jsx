import React, {Fragment, useState} from 'react';
import { useTracker } from 'meteor/react-meteor-data';
import { TasksCollection } from '../api/TasksCollection';
import { Task } from './task/Task'
import {TaskForm} from "./task/TaskForm";
import {LoginForm} from "./login/LoginForm";

// CheckBox ÏÑ†ÌÉù Ïó¨Î∂Ä Ï≤¥ÌÅ¨
const toggleChecked = ({ _id, isChecked}) => {
    TasksCollection.update(_id, {
        $set: {
            isChecked: !isChecked
        }
    })
};
export const App = () => {
    const user = useTracker(() => Meteor.user());

    const [hideCompleted, setHideCompleted] = useState(false);

    const hideCompletedFilter = { isChecked: {$ne: true}}
    const userFilter = user ? { userId: user._id } : {};
    /*
    ...(Three dots) es6ÏóêÏÑú ÏÉàÎ°ú Ï∂îÍ∞ÄÎêú Î¨∏Î≤ï
    1. Three dots Ìï®ÏàòÍ∞Ä Îß§Í∞úÎ≥ÄÏàòÏùò ÎÅùÏóê ÏûàÏúºÎ©¥ "ÎÇòÎ®∏ÏßÄ Îß§Í∞ú Î≥ÄÏàò" Ïù¥Í≥† ÎÇòÎ®∏ÏßÄ Ïù∏Ïàò Î™©Î°ùÏùÑ Î∞∞Ïó¥Î°ú ÏàòÏßë
    2. Ìï®Ïàò Ìò∏Ï∂ú Îì±ÏóêÏÑú Three dots ÏÇ¨Ïö©ÌïòÎ©¥ "ÌôïÏÇ∞ Ïó∞ÏÇ∞Ïûê" ÎùºÍ≥† ÌïòÎ©∞ Î∞∞Ïó¥ÏùÑ Î™©Î°ùÏúºÎ°ú ÌôïÏû•
    Ï∞∏Í≥† ÏÇ¨Ïù¥Ìä∏
    https://godnr149.tistory.com/150
    https://dinn.github.io/javascript/js-dotdotdot/
    */
    const pendingOnlyFilter = { ...hideCompletedFilter, ...userFilter };

    //ÏµúÏã†ÏàúÏúºÎ°ú Ï†ïÎ†¨ sort 1: ASC, -1: DESC
    const tasks = useTracker(() =>{
        if(!user){
            return [];
        }
        return TasksCollection.find(hideCompleted ? pendingOnlyFilter : userFilter, {
            sort: { createdAt: -1 },
        }).fetch();
    });

    //ÌÖåÏä§ÌÅ¨ ÏÇ≠Ï†ú
    const deleteTask = ({ _id}) => TasksCollection.remove(_id);

    const pendingTasksCount = useTracker(() => {
        if (!user) {
            return 0;
        }
        return TasksCollection.find(pendingOnlyFilter).count();
    });

    const pendingTasksTitle = `${
       pendingTasksCount ? `(${pendingTasksCount})` : '' 
    }`;
    const logout = () => Meteor.logout();

    return (
        <div className="app">
            <header>
                <div className="app-bar">
                    <div className="app-header">
                        <h1>üìùÔ∏è To Do List</h1>
                        {pendingTasksTitle}
                    </div>
                </div>
            </header>

            <div className="main">
                {user ?(
                    <Fragment>
                        <div className="user" onClick={logout}>
                            {user.username || user.profile.name}
                        </div>

                        <TaskForm user={user} />

                        <div className="filter">
                            <button onClick={() => setHideCompleted(!hideCompleted)}>
                                {hideCompleted? 'Show All' : 'Hide Completed'}
                            </button>
                        </div>

                        <ul className="tasks">
                            {tasks.map(task => (
                                <Task
                                    key={task._id}
                                    task={task}
                                    onCheckboxClick={toggleChecked}
                                    onDeleteClick={deleteTask}
                                />
                            ))}
                        </ul>
                    </Fragment>
                ) : (
                    <LoginForm/>
                )}
            </div>
        </div>
    );
};
